#–ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∏—Ç 2021 –∫–æ–Ω—Ñ–µ—Ç–∞. –ò–≥—Ä–∞—é—Ç –¥–≤–∞ –∏–≥—Ä–æ–∫–∞ –¥–µ–ª–∞—è —Ö–æ–¥ –¥—Ä—É–≥ –ø–æ—Å–ª–µ –¥—Ä—É–≥–∞. 
# –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∂–µ—Ä–µ–±—å—ë–≤–∫–æ–π. –ó–∞ –æ–¥–∏–Ω —Ö–æ–¥ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ —á–µ–º 28 –∫–æ–Ω—Ñ–µ—Ç. 
# –í—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –¥–æ—Å—Ç–∞—é—Ç—Å—è —Å–¥–µ–ª–∞–≤—à–µ–º—É –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥. 
# –°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–µ—Ç –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å –ø–µ—Ä–≤–æ–º—É –∏–≥—Ä–æ–∫—É, —á—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã —É —Å–≤–æ–µ–≥–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞?

# —Ö–æ–¥ = —Å—É–º–º–∞ –∫–æ–Ω—Ñ–µ—Ç // (28+1) - –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è

from ast import Not
from asyncio.log import logger
from random import randint
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, ConversationHandler
from telegram import ReplyKeyboardMarkup
import telegram
import logging

BEGIN, LEVEL, CANDY = range(3)

logger = logging.getLogger('logger')
case_lever = logging.getLogger('case_lever')
logger.info = 2021

bot = telegram.Bot('5652550779:AAFr5CzkINzCIe4DJHpt_WQhMFclts_HSkk')

updater = Updater(token='5652550779:AAFr5CzkINzCIe4DJHpt_WQhMFclts_HSkk', use_context=True)
dispatcher = updater.dispatcher

def game (update, context): # 
    
    task = str("üç¨üç¨üç¨ –ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∏—Ç 2021 –∫–æ–Ω—Ñ–µ—Ç–∞. –ò–≥—Ä–∞—é—Ç –¥–≤–∞ –∏–≥—Ä–æ–∫–∞ –¥–µ–ª–∞—è —Ö–æ–¥ –¥—Ä—É–≥ –ø–æ—Å–ª–µ –¥—Ä—É–≥–∞."
                "–ó–∞ –æ–¥–∏–Ω —Ö–æ–¥ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ —á–µ–º 28 –∫–æ–Ω—Ñ–µ—Ç." 
                "–í—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã –¥–æ—Å—Ç–∞—é—Ç—Å—è —Å–¥–µ–ª–∞–≤—à–µ–º—É –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥. " )
    context.bot.send_message(chat_id=update.effective_chat.id, text = task)
      
    context.bot.send_message(chat_id=update.effective_chat.id, text = "–í—ã –≥–æ—Ç–æ–≤—ã?üòà: –¥–∞/–Ω–µ—Ç")
    return LEVEL

def level (update, context):
    if str(update.message.text).lower() == '–¥–∞':
        keyboard = [['–ü—Ä–æ—Å—Ç–æ–π', '–°–ª–æ–∂–Ω—ã–π']]
        markup_key = ReplyKeyboardMarkup(keyboard, resize_keyboard = True, one_time_keyboard=True)
        context.bot.send_message(chat_id=update.effective_chat.id, text = "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã: –ü—Ä–æ—Å—Ç–æ–π/–°–ª–æ–∂–Ω—ã–π",reply_markup=markup_key,)
        return BEGIN
    else:
        context.bot.send_message(chat_id=update.effective_chat.id, text = "–•–æ—Ä–æ—à–æ, –ø–æ–∏–≥—Ä–∞–µ–º –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑")
        return ConversationHandler.END

def begin (update, context): # 
    case_lever.info = update.message.text
    
    lever = str("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ üç¨üç¨üç¨ (–æ—Ç 1 –¥–æ 28): ")
    context.bot.send_message(chat_id=update.effective_chat.id, text = lever)
    
    return CANDY

def candy (update, context):
    user = update.message.from_user  # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
    stack_candy = int(logger.info)
    if update.message.text == 'stop':
        return ConversationHandler.END
    elif update.message.text.isdigit() == False:
        context.bot.send_message(chat_id=update.effective_chat.id, text = "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ (–≤—ã—Ö–æ–¥ - stop)")
    else:
        step_game = int(update.message.text)

        if (step_game > 28):
            context.bot.send_message(chat_id=update.effective_chat.id, text = "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
        elif (step_game == stack_candy)and(step_game < 29): # –∏–≥—Ä–æ–∫ –∑–∞–±–∏—Ä–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ –∫–æ–Ω—Ñ–µ—Ç
            context.bot.send_message(chat_id=update.effective_chat.id, text = f"{user.first_name}, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –ü–æ–∑–¥–∞–≤–ª—è—é!")
            return ConversationHandler.END
        elif (stack_candy - step_game)<29: # —Ö–æ–¥ –±–æ—Ç–∞ –∏ –∫–æ–Ω—Ñ–µ—Ç 28 –∏ –º–µ–Ω—å—à–µ - —Ç–æ–≥–¥–∞ –±–æ—Ç –≤—ã–∏–≥—Ä–∞–ª
            context.bot.send_message(chat_id=update.effective_chat.id, text = f"{user.first_name}, —è –∑–∞–±–∏—Ä–∞—é –æ—Å—Ç–∞—Ç–æ–∫ üç¨üç¨üç¨ –∏ —è –≤—ã–∏–≥—Ä–∞–ª!")
            return ConversationHandler.END
        else:
            stack_candy = stack_candy - step_game
            
            if case_lever.info == "–ü—Ä–æ—Å—Ç–æ–π": 
                step_bot = randint(1,29)
            else:
                if stack_candy%29 == 0: 
                    step_bot =  28
                else : 
                    step_bot =  stack_candy%29

            msg = f"–ú–æ–π —Ö–æ–¥: {step_bot}. \n –í –∫—É—á–µ –æ—Å—Ç–∞–ª–æ—Å—å {(stack_candy - step_bot)} üç¨üç¨üç¨" #—Ö–æ–¥ –±–æ—Ç–∞
            context.bot.send_message(chat_id=update.effective_chat.id, text = msg)
            stack_candy -= step_bot #–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –∫–æ–Ω—Ñ–µ—Ç –≤ –∫—É—á–µ
            logger.info = stack_candy 
            context.bot.send_message(chat_id=update.effective_chat.id, text = "–¢–µ–ø–µ—Ä—å –í–∞—à —Ö–æ–¥. (–≤—ã—Ö–æ–¥ - stop)")      

def end(update, context):
       
    user = update.message.from_user  # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.bot.send_message(chat_id=update.effective_chat.id, text = "üç¨üç¨üç¨–ö–æ–Ω–µ—Ü –∏–≥—Ä—ãüç¨üç¨üç¨")
    # –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –∏–≥—Ä—É
    return ConversationHandler.END

candy_handler = ConversationHandler(
        entry_points = [CommandHandler('game', game)],
        states = {
            LEVEL: [MessageHandler(Filters.text, level)],
            BEGIN: [MessageHandler(Filters.text, begin)], 
            CANDY: [MessageHandler(Filters.text, candy)]
                },
        fallbacks = [CommandHandler('end', end)],
    )

dispatcher.add_handler(candy_handler)

print('start bot')
updater.start_polling()
updater.idle()